plugins {
    id 'maven-publish'
    id 'java-library'
    id 'signing'
    id "io.freefair.lombok" version "5.2.1"
}

group 'net.leloubil'
version '0.4.5'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnit()
}
dependencies {
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.3"
    implementation 'commons-codec:commons-codec:1.15'
    testCompile group: 'junit', name: 'junit', version: '4.13'
}

def v_ossrhUsername=""
def v_ossrhPassword=""

if (project.hasProperty("ossrhUsername")) {
    v_ossrhUsername = ossrhUsername
}
if (project.hasProperty("ossrhPassword")) {
    v_ossrhPassword = ossrhPassword
}


java {
    withJavadocJar()
    withSourcesJar()
}

publishing{
    publications{
        maven(MavenPublication){

            version = this.version

            from components.java

            pom {
                name = rootProject.name
                packaging =  'jar'
                // optionally artifactId can be defined here
                description =  'Java library to get data from a PRONOTE (Index-Education) server.'
                url =  'https://github.com/LelouBil/PronoteLib'

                scm {
                    connection = 'scm:git:https://github.com/LelouBil/PronoteLib'
                    developerConnection = 'scm:git:https://github.com/LelouBil/PronoteLib'
                    url = 'https://github.com/LelouBil/PronoteLib'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/LelouBil/PronoteLib/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'LelouBil'
                        name = "Bilel MEDIMEGH"
                        email = 'bilel.medimegh@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven{

            name = "central"

            def stagingUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotUrl : stagingUrl

            credentials {
                username v_ossrhUsername
                password v_ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

