plugins {
    id 'maven'
    id 'java'
    id 'signing'
    id "io.freefair.lombok" version "5.2.1"
    id 'net.researchgate.release' version '2.8.1'
}

group 'net.leloubil'
archivesBaseName = rootProject.name
version '0.4.5-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnit()
}
dependencies {
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    compile 'com.jayway.jsonpath:json-path:2.4.0'
    compile 'org.apache.commons:commons-lang3:3.11'
    compile "com.fasterxml.jackson.core:jackson-databind:2.11.3"
    compile 'commons-codec:commons-codec:1.15'
    testCompile group: 'junit', name: 'junit', version: '4.13'
}

def v_ossrhUsername=""
def v_ossrhPassword=""

if (project.hasProperty("ossrhUsername")) {
    v_ossrhUsername = ossrhUsername
}
if (project.hasProperty("ossrhPassword")) {
    v_ossrhPassword = ossrhPassword
}

task javadocJar(type: Jar) {
    getArchiveClassifier().set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: v_ossrhUsername, password: v_ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: v_ossrhUsername, password: v_ossrhPassword)
            }

            pom.project {
                name = rootProject.name
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Java library to get data from a PRONOTE (Index-Education) server.'
                url 'https://github.com/LelouBil/PronoteLib'

                scm {
                    connection 'scm:git:https://github.com/LelouBil/PronoteLib'
                    developerConnection 'scm:git:https://github.com/LelouBil/PronoteLib'
                    url 'https://github.com/LelouBil/PronoteLib'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url 'https://github.com/LelouBil/PronoteLib/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'LelouBil'
                        name = "Bilel MEDIMEGH"
                        email 'bilel.medimegh@gmail.com'
                    }
                }
            }
        }
    }
}
afterReleaseBuild.dependsOn uploadArchives
